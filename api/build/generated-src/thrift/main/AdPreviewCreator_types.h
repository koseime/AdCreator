/**
 * Autogenerated by Thrift Compiler (0.9.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
#ifndef AdPreviewCreator_TYPES_H
#define AdPreviewCreator_TYPES_H

#include <thrift/Thrift.h>
#include <thrift/TApplicationException.h>
#include <thrift/protocol/TProtocol.h>
#include <thrift/transport/TTransport.h>

#include <thrift/cxxfunctional.h>




typedef struct _PreviewInfo__isset {
  _PreviewInfo__isset() : productBlob(false), backgroundBlob(false), logoBlob(false), adEntryJsonString(false), title(false), copy(false), backgroundColor(false) {}
  bool productBlob;
  bool backgroundBlob;
  bool logoBlob;
  bool adEntryJsonString;
  bool title;
  bool copy;
  bool backgroundColor;
} _PreviewInfo__isset;

class PreviewInfo {
 public:

  static const char* ascii_fingerprint; // = "5DA595EAE7ECCE4D6C8D61AD15427AFF";
  static const uint8_t binary_fingerprint[16]; // = {0x5D,0xA5,0x95,0xEA,0xE7,0xEC,0xCE,0x4D,0x6C,0x8D,0x61,0xAD,0x15,0x42,0x7A,0xFF};

  PreviewInfo() : productBlob(), backgroundBlob(), logoBlob(), adEntryJsonString(), title(), copy(), backgroundColor() {
  }

  virtual ~PreviewInfo() throw() {}

  std::string productBlob;
  std::string backgroundBlob;
  std::string logoBlob;
  std::string adEntryJsonString;
  std::string title;
  std::string copy;
  std::string backgroundColor;

  _PreviewInfo__isset __isset;

  void __set_productBlob(const std::string& val) {
    productBlob = val;
  }

  void __set_backgroundBlob(const std::string& val) {
    backgroundBlob = val;
  }

  void __set_logoBlob(const std::string& val) {
    logoBlob = val;
  }

  void __set_adEntryJsonString(const std::string& val) {
    adEntryJsonString = val;
  }

  void __set_title(const std::string& val) {
    title = val;
  }

  void __set_copy(const std::string& val) {
    copy = val;
  }

  void __set_backgroundColor(const std::string& val) {
    backgroundColor = val;
  }

  bool operator == (const PreviewInfo & rhs) const
  {
    if (!(productBlob == rhs.productBlob))
      return false;
    if (!(backgroundBlob == rhs.backgroundBlob))
      return false;
    if (!(logoBlob == rhs.logoBlob))
      return false;
    if (!(adEntryJsonString == rhs.adEntryJsonString))
      return false;
    if (!(title == rhs.title))
      return false;
    if (!(copy == rhs.copy))
      return false;
    if (!(backgroundColor == rhs.backgroundColor))
      return false;
    return true;
  }
  bool operator != (const PreviewInfo &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const PreviewInfo & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

void swap(PreviewInfo &a, PreviewInfo &b);



#endif
